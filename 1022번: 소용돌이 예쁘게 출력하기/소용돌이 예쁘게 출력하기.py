#  **************************************************************************  #
#                                                                              #
#                                                       :::    :::    :::      #
#    Problem Number: 1022                              :+:    :+:      :+:     #
#                                                     +:+    +:+        +:+    #
#    By: gattswet0926 <boj.kr/u/gattswet0926>        +#+    +#+          +#+   #
#                                                   +#+      +#+        +#+    #
#    https://boj.kr/1022                           #+#        #+#      #+#     #
#    Solved: 2025/07/01 19:58:24 by gattswet0926  ###          ###   ##.kr     #
#                                                                              #
#  **************************************************************************  #

# -n행 n열의 수 계산
def nn(n):
    if n == 0:
        return 1
    # n이 1 이상이면
    return 4*n**2 - 2*n + 1

# r행 c열의 수 계산
def rc(r, c):
    max_abs = max(abs(r), abs(c))
    standard = nn(max_abs) # -n행 n열 값
    if r == -max_abs: # 위쪽
        return standard + (max_abs - c)
    elif c == -max_abs: # 왼쪽
        return standard + 2 * max_abs + (max_abs + r)
    elif r == max_abs: # 밑쪽
        return standard + 4 * max_abs + (max_abs + c)
    elif c == max_abs: # 오른쪽
        return standard - (max_abs + r)

# 주어진 입력받기
r1, c1, r2, c2 = map(int, input().split())

if r1 == r2 == c1 == c2 == 0:
    print(1)
else:
    # 최댓값 구하기(우측정렬 자릿수를 위해)
    max_value = 0
    for r in range(r1, r2 + 1):
        for c in range(c1, c2 + 1):
            if rc(r, c) > max_value:
                max_value = rc(r, c)

    # 지정구간 출력
    for r in range(r1, r2 + 1):
        answers = []
        for c in range(c1, c2 + 1):
            answers.append(str(rc(r, c)).rjust(len(str(max_value))))
        print(' '.join(answers))

#  **************************************************************************  #

#  0행 0열   1   
# -1행 1열   3   2 = 1 + 1
# -2행 2열   13  10 = 2 + 2 + 3 + 3
# -3행 3열   31  18 = 4 + 4 + 5 + 5
# -4행 4열   57  26 = 6 + 6 + 7 + 7

# -n행 n열       8(n-1)+2 = 2(n-1) + 2(n-1) + 2(n-1)+1 + 2(n-1)+1   * n>0
#           1 + sum_n=1^n = 1 + sum(8n-6) = 1 + 4n^2 + 4n - 6n = 4n^2 -2n + 1

# 예제 입력 1 기준
# ( a,  b) (-큰 절대값, 큰 절대값)         
# (-3, -3) (-3, 3) + 3 - (-3)
# (-3, -2) (-3, 3) + 3 - (-2)
# (-3, -1) (-3, 3) + 3 - (-1)
# (-3,  0) (-3, 3) + 3 - ( 0)
# (-2, -3) (-3, 3) + 3 - (-3) + 1
# (-2, -2) (-2, 2) + 2 - (-2)
# (-2, -1) (-2, 2) + 2 - (-1)
# (-2,  0) (-2, 2) + 2 - ( 0)
# (-1, -3) (-3, 3) + 3 - (-3) + 2
# (-1, -2) (-2, 2) + 2 - (-2) + 1
# (-1, -1) (-1, 1) + 1 - (-1)
# (-1,  0) (-1, 1) + 1 - ( 0)
# ( 0, -3) 
# ( 0, -2)
# ( 0, -1)
# ( 0,  0)
# ( 1, -3)
# ( 1, -2)
# ( 1, -1)
# ( 1,  0)
# ( 2, -3)
# ( 2, -2)
# ( 2, -1)
# ( 2,  0)
